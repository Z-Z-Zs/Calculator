{"version":3,"sources":["components/Button.js","components/Input.js","App.js","reportWebVitals.js","index.js"],"names":["Button","symbol","color","handleClick","className","style","backgroundColor","onClick","Input","text","result","App","useState","setResult","setText","addToText","val","buttonColor","input","join","math","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SASeA,EANA,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YAC7B,OACI,qBAAKC,UAAU,iBAAiBC,MAAO,CAACC,gBAAiBJ,GAAQK,QAAW,kBAAMJ,EAAYF,IAA9F,SAAwGA,KCQjGO,G,MAVD,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,OAClB,OACI,sBAAKN,UAAU,gBAAf,UACI,qBAAKA,UAAU,SAAf,SAAwB,6BAAKM,MAE7B,qBAAKN,UAAU,OAAf,SAAsB,6BAAKK,WCwDxBE,EAxDH,WAEV,MAA4BC,mBAAS,IAArC,mBAAOF,EAAP,KAAeG,EAAf,KACA,EAAwBD,mBAAS,IAAjC,mBAAOH,EAAP,KAAaK,EAAb,KAEMC,EAAY,SAACC,GACjBF,GAAQ,SAACL,GAAD,4BAAaA,GAAb,CAAmBO,EAAM,UAc7BC,EAAc,UAEpB,OACE,qBAAKb,UAAU,MAAf,SACE,sBAAKA,UAAU,eAAf,UACI,cAAC,EAAD,CAAOK,KAAMA,EAAMC,OAAQA,IAC7B,sBAAKN,UAAU,MAAf,UACE,cAAC,EAAD,CAAQH,OAAO,IAAIE,YAAaY,IAChC,cAAC,EAAD,CAAQd,OAAO,IAAIE,YAAaY,IAChC,cAAC,EAAD,CAAQd,OAAO,IAAIE,YAAaY,IAChC,cAAC,EAAD,CAAQd,OAAO,IAAIC,MAAOe,EAAad,YAAaY,OAEtD,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAQH,OAAO,IAAIE,YAAaY,IAChC,cAAC,EAAD,CAAQd,OAAO,IAAIE,YAAaY,IAChC,cAAC,EAAD,CAAQd,OAAO,IAAIE,YAAaY,IAChC,cAAC,EAAD,CAAQd,OAAO,IAAIC,MAAOe,EAAad,YAAaY,OAEtD,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAQH,OAAO,IAAIE,YAAaY,IAChC,cAAC,EAAD,CAAQd,OAAO,IAAIE,YAAaY,IAChC,cAAC,EAAD,CAAQd,OAAO,IAAIE,YAAaY,IAChC,cAAC,EAAD,CAAQd,OAAO,IAAIC,MAAOe,EAAad,YAAaY,OAEtD,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAQH,OAAO,IAAIE,YAAaY,IAChC,cAAC,EAAD,CAAQd,OAAO,IAAIE,YAAaY,IAChC,cAAC,EAAD,CAAQd,OAAO,IAAIE,YAjCH,WACtB,IAAMe,EAAQT,EAAKU,KAAK,IAExBN,EAAUO,IAAcF,OA+BlB,cAAC,EAAD,CAAQjB,OAAO,IAAIC,MAAOe,OAE5B,cAAC,EAAD,CAAQhB,OAAO,QAAQC,MAAM,UAAUC,YAzC1B,WACjBW,EAAQ,IACRD,EAAU,aCPCQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.318febe2.chunk.js","sourcesContent":["import React from 'react';\nimport './Button.css';\n\nconst Button = ({ symbol, color, handleClick}) => {\n    return (\n        <div className=\"button-wrapper\" style={{backgroundColor: color}} onClick = {() => handleClick(symbol)}>{symbol}</div>\n    )\n}\n\nexport default Button\n","import React from 'react'\nimport \"./Input.css\";\n\nconst Input = ({text, result}) => {\n    return (\n        <div className=\"input-wrapper\">\n            <div className=\"result\"><h1>{result}</h1></div>\n\n            <div className=\"text\"><h3>{text}</h3></div>\n        </div>\n    )\n}\n\nexport default Input\n","import React, { useState } from \"react\";\nimport * as math from \"mathjs\";\nimport './App.css';\nimport Button from './components/Button';\nimport Input from './components/Input';\nimport { evaluate } from \"mathjs\";\n\n\nconst App = () => {\n\n  const [result, setResult] = useState(\"\");\n  const [text, setText] = useState(\"\");\n\n  const addToText = (val) => {\n    setText((text) =>[...text, val + \" \"]);\n  };\n\n  const resetInput = ()=>{\n    setText(\"\");\n    setResult(\"\");\n  }\n\n  const calculateResult = () => {\n    const input = text.join(\"\") // remove commas and space\n\n    setResult(math.evaluate(input));\n  }\n\n  const buttonColor = \"#32502E\";\n\n  return (\n    <div className=\"App\">\n      <div className=\"calc-wrapper\">\n          <Input text={text} result={result}/>\n        <div className=\"row\">\n          <Button symbol=\"7\" handleClick={addToText}/>\n          <Button symbol=\"8\" handleClick={addToText}/>\n          <Button symbol=\"9\" handleClick={addToText}/>\n          <Button symbol=\"/\" color={buttonColor} handleClick={addToText}/>\n        </div>\n        <div className=\"row\">\n          <Button symbol=\"4\" handleClick={addToText}/>\n          <Button symbol=\"5\" handleClick={addToText}/>\n          <Button symbol=\"6\" handleClick={addToText}/>\n          <Button symbol=\"*\" color={buttonColor} handleClick={addToText}/>\n        </div>\n        <div className=\"row\">\n          <Button symbol=\"1\" handleClick={addToText}/>\n          <Button symbol=\"2\" handleClick={addToText}/>\n          <Button symbol=\"3\" handleClick={addToText}/>\n          <Button symbol=\"+\" color={buttonColor} handleClick={addToText}/>\n        </div>\n        <div className=\"row\">\n          <Button symbol=\"0\" handleClick={addToText}/>\n          <Button symbol=\".\" handleClick={addToText}/>\n          <Button symbol=\"=\" handleClick={calculateResult}/>\n          <Button symbol=\"-\" color={buttonColor}/>\n        </div>\n        <Button symbol=\"clear\" color=\"#781D42\" handleClick={resetInput}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}